================================================================================
Comment
================================================================================

// this is a comment

/*
  Multi-line comment
*/

--------------------------------------------------------------------------------

(program
  (comment)
  (comment))

================================================================================
Models
================================================================================

model m of Mapping
{
  Foo(a1,b2).
}


--------------------------------------------------------------------------------

(program
  (module
    (model
      (model_sig_config
        (model_sig
          (model_intro
            (bareid)
            (mod_ref
              (mod_ref_no_rename
                (bareid))))))
      (model_body
        (model_sentence
          (model_fact_list
            (model_fact
              (func_term
                (id
                  (bareid))
                (func_term_list
                  (func_or_compr
                    (func_term
                      (atom
                        (id
                          (bareid)))))
                  (func_or_compr
                    (func_term
                      (atom
                        (id
                          (bareid))))))))))))))

================================================================================
Dotted identifiers
================================================================================
domain D
{
   A :- x is y.
   A :- x is B.y.
}
--------------------------------------------------------------------------------

(program
  (module
    (domain
      (domain_sig_config
        (domain_sig
          (bareid)))
      (dom_sentences
        (dom_sentence_config
          (dom_sentence
            (rule
              (func_term_list
                (func_or_compr
                  (func_term
                    (atom
                      (id
                        (bareid))))))
              (body_list
                (body
                  (constraint
                    (id
                      (bareid))
                    (func_term
                      (atom
                        (id
                          (bareid))))))))))
        (dom_sentence_config
          (dom_sentence
            (rule
              (func_term_list
                (func_or_compr
                  (func_term
                    (atom
                      (id
                        (bareid))))))
              (body_list
                (body
                  (constraint
                    (id
                      (bareid))
                    (func_term
                      (atom
                        (id
                          (qualid))))))))))))))

================================================================================
Type declarations followed by rules
================================================================================

transform T1 (in1:: A1, in2:: A1) returns (out:: A1')
{
   Triple ::= (in1.Cons + {NIL}).

   Things ::= Triple + in1.Things.
   //// Coercion through constants
   out.Cons(x, y) :- in1.Cons(x, y).

   Things ::= Triple + in1.Things.
   Triple(c, c, c) :- c is in1.Cons.
}
--------------------------------------------------------------------------------

(program
  (module
    (transform
      (bareid)
      (transform_rest
        (transform_sig_config
          (transform_sig
            (trans_sig_in
              (vom_param_list
                (val_or_model_program
                  (mod_ref_rename
                    (bareid)
                    (bareid)))
                (val_or_model_program
                  (mod_ref_rename
                    (bareid)
                    (bareid)))))
            (model_param_list
              (mod_ref_rename
                (bareid)
                (bareid)))))
        (trans_body
          (trans_sentence_config
            (trans_sentence
              (type_decl
                (bareid)
                (type_decl_body
                  (fields
                    (field
                      (unnbody
                        (unncmp
                          (typeid
                            (qualid)))
                        (unncmp
                          (enum_list
                            (enum_cnst
                              (bareid)))))))))))
          (trans_sentence_config
            (trans_sentence
              (type_decl
                (bareid)
                (type_decl_body
                  (unnbody
                    (unncmp
                      (typeid
                        (bareid)))
                    (unncmp
                      (typeid
                        (qualid))))))))
          (comment)
          (trans_sentence_config
            (trans_sentence
              (rule
                (func_term_list
                  (func_or_compr
                    (func_term
                      (id
                        (qualid))
                      (func_term_list
                        (func_or_compr
                          (func_term
                            (atom
                              (id
                                (bareid)))))
                        (func_or_compr
                          (func_term
                            (atom
                              (id
                                (bareid)))))))))
                (body_list
                  (body
                    (constraint
                      (func_term
                        (id
                          (qualid))
                        (func_term_list
                          (func_or_compr
                            (func_term
                              (atom
                                (id
                                  (bareid)))))
                          (func_or_compr
                            (func_term
                              (atom
                                (id
                                  (bareid)))))))))))))
          (trans_sentence_config
            (trans_sentence
              (type_decl
                (bareid)
                (type_decl_body
                  (unnbody
                    (unncmp
                      (typeid
                        (bareid)))
                    (unncmp
                      (typeid
                        (qualid))))))))
          (trans_sentence_config
            (trans_sentence
              (rule
                (func_term_list
                  (func_or_compr
                    (func_term
                      (id
                        (bareid))
                      (func_term_list
                        (func_or_compr
                          (func_term
                            (atom
                              (id
                                (bareid)))))
                        (func_or_compr
                          (func_term
                            (atom
                              (id
                                (bareid)))))
                        (func_or_compr
                          (func_term
                            (atom
                              (id
                                (bareid)))))))))
                (body_list
                  (body
                    (constraint
                      (id
                        (bareid))
                      (func_term
                        (atom
                          (id
                            (qualid)))))))))))))))
